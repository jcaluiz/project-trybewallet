{"version":3,"sources":["services/currencyAPI.js","redux/actions/index.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/store.js","pages/Login.js","components/HeaderWallet.js","components/WalletForm.js","components/Table.js","pages/Wallet.js","App.js","index.js"],"names":["getCurrencyAPI","fetch","then","response","json","data","LOGIN","CURRENCY_TYPE_ACTION","EXPENSES_TYPE","TOTAL_EXPENSE_TYPE","EDIT_EXPENSE_ARRAY","HABILITY_EDIT_TO_REDUX","CLICK_GET_EXPENSE_TYPE","TYPE_NUMBERLESS","expensesAc","expenses","type","habilityEditToRedux","editHability","name","value","getCurrencyAPIThunk","dispatch","payload","error","INITIAL_STATE","email","password","user","state","action","currencies","exchange","errorExchange","total","currenciesDetails","editArrayExpenses","gasto","numberLess","wallet","Object","keys","filter","currencyL","editExpensesArray","editTotal","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","Login","emailHabilityButton","passwordHabilityButton","habilityButton","event","target","preventDefault","console","log","includes","setState","length","handleClick","props","LoginInformation","history","push","this","className","htmlFor","id","onChange","disabled","onClick","React","Component","connect","loginAction","HeaderWallet","description","currency","currencyList","method","tag","habilityFromBtn","handleChange","map","index","WalletForm","calculateTotal","valueProperty","e","Number","habilityEditChange","prevState","habilityEditChangeState","handleInputEditExpense","param","exchangeRates","_number","handleEditTotalState","totalExpense","calculo","reduce","acc","curr","toFixed","totalExpenseCalculator","handleDeleteExpense","expensesStateRedux","getExchangeValue","expense","values","find","code","ask","exchangeValueHability","multiplicationWithExchange","getMultiplicationWithExchange","totalCalculo","parseFloat","sumTotalHability","getExpenseTotal","totalHability","handleGetPropsTotal","habilityEditFromRedux","exchangeRatesAction","expensesAction","getCurrencyAPIThunkReq","editExpenseHability","gastoRedux","numberForLess","totalOfRedux","undefined","defaultProps","getTotalExpense","expensesActionProp","Table","habilityReloadExpense","habilityEdit","handleListExpense","gastos","numberOfDeleteTotalArray","codein","editListExpense","getExpenseClick","g","scope","sort","a","b","nameRedux","valueRedux","param1","param2","clickGetExpense","number","Wallet","App","exact","path","render","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.a9b0dad1.chunk.js","sourcesContent":["const API = 'https://economia.awesomeapi.com.br/json/all';\n\nconst getCurrencyAPI = () => (\n  fetch(API).then((response) => response.json())\n    .then((data) => data)\n);\n\nexport default getCurrencyAPI;\n","// Coloque aqui suas actions\nimport getCurrencyAPI from '../../services/currencyAPI';\n\nexport const LOGIN = 'LOGIN';\nexport const CURRENCY_TYPE_ACTION = 'CURRENCY_TYPE_ACTION';\nexport const CURRENCY_TYPE_ACTION_ERROR = 'CURRENCY_TYPE_ACTION_ERROR';\nexport const EXPENSES_TYPE = 'EXPENSES_TYPE';\nexport const EXCHANGE_TYPE_ACTION = 'EXCHANGE_TYPE_ACTION';\nexport const EXCHANGE_TYPE_ACTION_ERROR = 'EXCHANGE_TYPE_ACTION_ERROR';\nexport const TOTAL_EXPENSE_TYPE = 'TOTAL_EXPENSE_TYPE';\nexport const EDIT_EXPENSE_ARRAY = 'EDIT_EXPENSE_ARRAY';\nexport const HABILITY_EDIT_TO_REDUX = 'HABILITY_EDIT_TO_REDUX';\nexport const CLICK_GET_EXPENSE_TYPE = 'CLICK_GET_EXPENSE_TYPE';\nexport const TYPE_NUMBERLESS = 'TYPE_NUMBERLESS';\n\nexport const loginAction = (email, password) => ({ type: LOGIN, email, password });\n\nexport const getCurrency = (payload) => ({\n  type: CURRENCY_TYPE_ACTION,\n  payload,\n});\n\nexport const getCurrencyError = (error) => ({\n  type: CURRENCY_TYPE_ACTION_ERROR,\n  error,\n});\n\nexport const expensesAc = (expenses) => ({\n  type: EXPENSES_TYPE,\n  expenses,\n});\n\nexport const getTotalExpense = (total) => ({\n  type: TOTAL_EXPENSE_TYPE,\n  total,\n});\n\nexport const handleBtnDelete = (editExpensesArray, total) => ({\n  type: EDIT_EXPENSE_ARRAY,\n  editExpensesArray,\n  total,\n});\n\nexport const habilityEditToRedux = (editHability, name, value) => ({\n  type: HABILITY_EDIT_TO_REDUX,\n  editHability,\n  name,\n  value,\n});\n\nexport const clickGetExpense = (gasto) => ({\n  type: CLICK_GET_EXPENSE_TYPE,\n  gasto,\n});\n\nexport const totalLess = (numberLess) => ({\n  type: TYPE_NUMBERLESS,\n  numberLess,\n});\n\nexport const getCurrencyAPIThunk = () => async (dispatch) => {\n  try {\n    const response = await getCurrencyAPI();\n    dispatch(getCurrency(response));\n  } catch (error) {\n    dispatch(getCurrencyError(error));\n  }\n};\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { LOGIN } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case LOGIN:\n    return {\n      ...state,\n      email: action.email,\n      password: action.password,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nimport { CURRENCY_TYPE_ACTION,\n  EXPENSES_TYPE,\n  TOTAL_EXPENSE_TYPE, EDIT_EXPENSE_ARRAY, HABILITY_EDIT_TO_REDUX,\n  CLICK_GET_EXPENSE_TYPE, TYPE_NUMBERLESS } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  error: '',\n  exchange: {},\n  errorExchange: '',\n  total: 0,\n  expenses: [],\n  currenciesDetails: [],\n  editArrayExpenses: false,\n  name: '',\n  value: '',\n  editHability: false,\n  gasto: {},\n  numberLess: 0,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case CURRENCY_TYPE_ACTION:\n    return {\n      ...state,\n      currencies: Object.keys(action.payload).filter((currencyL) => currencyL !== 'USDT'),\n      currenciesDetails: action.payload,\n    };\n  case EXPENSES_TYPE:\n    return {\n      ...state,\n      expenses: action.expenses,\n    };\n  case TOTAL_EXPENSE_TYPE:\n    return {\n      ...state,\n      total: action.total,\n    };\n  case EDIT_EXPENSE_ARRAY:\n    return {\n      ...state,\n      editArrayExpenses: action.editExpensesArray,\n      editTotal: action.total,\n    };\n  case HABILITY_EDIT_TO_REDUX:\n    return {\n      ...state,\n      editHability: action.editHability,\n      name: action.name,\n      value: action.value,\n    };\n  case CLICK_GET_EXPENSE_TYPE:\n    return {\n      ...state,\n      gasto: action.gasto,\n    };\n  case TYPE_NUMBERLESS:\n    return {\n      ...state,\n      numberLess: action.numberLess,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default rootReducer;\n","// configure aqui sua store\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loginAction } from '../redux/actions';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    emailHabilityButton: false,\n    passwordHabilityButton: false,\n  }\n\n  habilityButton = (event) => {\n    const { target: { name, value } } = event;\n    event.preventDefault();\n    const valueLengthHability = 6;\n\n    console.log(name);\n    if (name === 'email' && value.includes('@') && value.includes('.com')) {\n      this.setState({ emailHabilityButton: true });\n    }\n    if (name === 'password' && value.length >= valueLengthHability) {\n      this.setState({ passwordHabilityButton: true });\n    }\n    if (name === 'email' && !(value.includes('@') && value.includes('.com'))) {\n      this.setState({ emailHabilityButton: false });\n    }\n    if (name === 'password' && value.length < valueLengthHability) {\n      this.setState({ passwordHabilityButton: false });\n    }\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClick = () => {\n    const { email, password } = this.state;\n    const { LoginInformation, history } = this.props;\n\n    LoginInformation(email, password);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { emailHabilityButton, passwordHabilityButton } = this.state;\n    console.log(this.state);\n    return (\n      <div className=\"forms-container\">\n        <h3>TrybeWallet</h3>\n        <form className=\"forms-content\">\n          <label htmlFor=\"email-input\">\n            Email:\n            {' '}\n            <input\n              type=\"email\"\n              data-testid=\"email-input\"\n              id=\"email-input\"\n              name=\"email\"\n              onChange={ (event) => this.habilityButton(event) }\n            />\n          </label>\n          <label htmlFor=\"password-input\">\n            Password:\n            {' '}\n            <input\n              type=\"password\"\n              data-testid=\"password-input\"\n              id=\"password-input\"\n              name=\"password\"\n              onChange={ (event) => this.habilityButton(event) }\n            />\n          </label>\n          <button\n            type=\"submit\"\n            disabled={ !(emailHabilityButton && passwordHabilityButton) }\n            onClick={ this.handleClick }\n          >\n            Entrar\n\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = ({\n  LoginInformation: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  LoginInformation: (email, password) => dispatch(loginAction(email, password)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class HeaderWallet extends React.Component {\n  render() {\n    const { value, description, currency, currencyList, method,\n      tag, editHability, habilityFromBtn, handleChange,\n      handleClick } = this.props;\n    return (\n      <form className=\"header-forms-wallet\">\n        {' '}\n        <label htmlFor=\"value-input\">\n          Valor:\n          {' '}\n          <input\n            name=\"value\"\n            type=\"number\"\n            data-testid=\"value-input\"\n            id=\"value-input\"\n            value={ value }\n            onChange={ (event) => handleChange(event) }\n          />\n        </label>\n        <label htmlFor=\"description-input\">\n          Descrição:\n          {' '}\n          <textarea\n            name=\"description\"\n            data-testid=\"description-input\"\n            id=\"description-input\"\n            value={ description }\n            onChange={ (event) => handleChange(event) }\n          />\n        </label>\n        <label htmlFor=\"currency-input\">\n          Moeda:\n          {' '}\n          <select\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            id=\"currency-input\"\n            value={ currency }\n            onChange={ (event) => handleChange(event) }\n          >\n            {\n              currencyList\n                .map((currencyL, index) => (\n                  <option key={ index }>{currencyL}</option>\n                ))\n            }\n          </select>\n        </label>\n        <label htmlFor=\"method-input\">\n          Método de Pagamento:\n          {' '}\n          <select\n            name=\"method\"\n            data-testid=\"method-input\"\n            id=\"method-input\"\n            value={ method }\n            onChange={ (event) => handleChange(event) }\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"tag-input\">\n          Categoria:\n          {' '}\n          <select\n            name=\"tag\"\n            data-testid=\"tag-input\"\n            id=\"tag-input\"\n            value={ tag }\n            onChange={ (event) => handleChange(event) }\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n        {\n          (editHability && !habilityFromBtn) || (!editHability && habilityFromBtn) ? (\n            <button\n              type=\"button\"\n              onClick={ handleClick }\n            >\n              Editar despesa\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={ handleClick }\n            >\n              Adicionar despesa\n            </button>\n          )\n        }\n      </form>\n    );\n  }\n}\n\nHeaderWallet.propTypes = ({\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  description: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  currencyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  method: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  editHability: PropTypes.bool.isRequired,\n  habilityFromBtn: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTotalExpense, expensesAc as expensesActionProp,\n  getCurrencyAPIThunk, habilityEditToRedux } from '../redux/actions';\nimport HeaderWallet from './HeaderWallet';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: 0,\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      expenses: [],\n      exchangeRates: [],\n      total: [0],\n      exchange: 0,\n      exchangeValueHability: false,\n      multiplicationWithExchange: false,\n      sumTotalHability: false,\n      totalExpenseCalculator: 0,\n      totalHability: false,\n      habilityEditChangeState: false,\n      habilityFromBtn: false,\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      exchangeValueHability, multiplicationWithExchange, habilityFromBtn, total,\n      sumTotalHability, totalHability, expenses, habilityEditChangeState } = this.state;\n    const { expensesAction, getCurrencyAPIThunkReq,\n      editExpenseHability, editTotal, gastoRedux, editHability,\n      numberForLess, totalOfRedux, totalExpense } = this.props;\n    console.log(totalOfRedux);\n    if (editTotal !== undefined) {\n      this.handleEditTotalState(total.filter((e) => e !== Number(editTotal)));\n    }\n    if (editExpenseHability === true) { this.handleDeleteExpense(); }\n    if (exchangeValueHability === true) {\n      this.getExchangeValue();\n      getCurrencyAPIThunkReq();\n    }\n    if (multiplicationWithExchange === true) { this.getMultiplicationWithExchange(); }\n    if (sumTotalHability === true) { this.getExpenseTotal(); }\n    if (totalHability === true) {\n      this.handleGetPropsTotal();\n      expensesAction(expenses);\n    }\n    if (editHability && !habilityFromBtn && !habilityEditChangeState) {\n      this.handleInputEditExpense(gastoRedux);\n      expensesAction(expenses.filter((expense) => expense.id !== gastoRedux.id));\n      totalExpense((totalOfRedux - numberForLess).toFixed(2));\n      this.calculateTotal(numberForLess);\n    }\n  }\n\n  calculateTotal = (valueProperty) => {\n    const { total } = this.state;\n    this.setState({ total: total.filter((e) => e !== Number(valueProperty)) });\n  }\n\n  habilityEditChange = () => {\n    const { editHability } = this.props;\n    return (editHability) && this.setState((prevState) => ({\n      habilityEditChangeState: !prevState.habilityEditChangeState }));\n  }\n\n  handleInputEditExpense = (param) => {\n    const { total } = this.state;\n    this.setState((prevState) => ({\n      id: param.id,\n      value: param.value,\n      currency: param.currency,\n      method: param.method,\n      tag: param.tag,\n      description: param.description,\n      exchangeRates: param.exchangeRates,\n      habilityEditChangeState: !prevState.habilityEditChangeState,\n      total: total.filter((_number, index) => index !== param.id),\n    }));\n  }\n\n  handleEditTotalState = (valueProperty) => {\n    const { totalExpense } = this.props;\n    this.setState({ total: valueProperty });\n    const calculo = valueProperty.reduce((acc, curr) => acc + Number(curr), 0);\n    totalExpense(Number(calculo.toFixed(2)));\n    this.setState({ totalExpenseCalculator: Number(calculo.toFixed(2)) });\n  }\n\n  handleDeleteExpense = () => {\n    const { expensesStateRedux } = this.props;\n    this.setState({ expenses: expensesStateRedux });\n  }\n\n  getExchangeValue = () => {\n    const { expenses } = this.state;\n    expenses.filter((expense) => this.setState({ exchange: Object\n      .values(expenses[0].exchangeRates)\n      .find((exchange) => expense.currency === exchange.code).ask }));\n    this.setState({ exchangeValueHability: false, multiplicationWithExchange: true });\n  }\n\n  getMultiplicationWithExchange = () => {\n    const { expenses, exchange } = this.state;\n    const totalCalculo = expenses.map((expense) => expense.value * parseFloat(exchange));\n    this.setState((prevState) => ({ multiplicationWithExchange: false,\n      total: [...prevState.total, Number((totalCalculo[totalCalculo.length - 1])\n        .toFixed(2))],\n      sumTotalHability: true,\n    }));\n  }\n\n  getExpenseTotal = () => {\n    const { total } = this.state;\n    const calculo = total.reduce((acc, curr) => acc + Number(curr), 0);\n    this.setState({ totalExpenseCalculator: Number(calculo.toFixed(2)),\n      sumTotalHability: false,\n      totalHability: true });\n  }\n\n  handleGetPropsTotal = () => {\n    const { totalExpenseCalculator } = this.state;\n    const { totalExpense } = this.props;\n    totalExpense(totalExpenseCalculator);\n    this.setState({ totalHability: false });\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const { habilityEditFromRedux, editHability } = this.props;\n    this.setState({ [name]: value });\n    return (editHability === true) && habilityEditFromRedux(editHability, name, value);\n  }\n\n  handleClick = () => {\n    const { value, description, currency, method, tag, id } = this.state;\n    this.handleDeleteExpense();\n    const { exchangeRatesAction, editHability } = this.props;\n    this.setState((prevState) => ({\n      expenses: [...prevState.expenses, {\n        id,\n        value,\n        currency,\n        method,\n        tag,\n        description,\n        exchangeRates: exchangeRatesAction,\n      }],\n      id: prevState.id + 1,\n      value: '',\n      description: '' }));\n    this.setState({ exchangeValueHability: true });\n    return editHability ? (this.setState(({ habilityFromBtn: true }))) : (\n      this.setState(({ habilityFromBtn: false }))\n    );\n  }\n\n  render() {\n    const { currencyList, editHability } = this.props;\n    const {\n      value, description, currency, method, tag, exchangeRates, habilityFromBtn,\n    } = this.state;\n    console.log(exchangeRates);\n    return (\n      <HeaderWallet\n        value={ value }\n        description={ description }\n        currency={ currency }\n        currencyList={ currencyList }\n        method={ method }\n        tag={ tag }\n        editHability={ editHability }\n        habilityFromBtn={ habilityFromBtn }\n        handleChange={ this.handleChange }\n        handleClick={ this.handleClick }\n      />\n    );\n  }\n}\n\nWalletForm.propTypes = ({\n  currencyList: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  exchangeRatesAction: PropTypes.oneOfType([PropTypes.object, PropTypes.array,\n  ]).isRequired,\n  totalExpense: PropTypes.func.isRequired,\n  getCurrencyAPIThunkReq: PropTypes.func.isRequired,\n  expensesAction: PropTypes.func.isRequired,\n  expensesStateRedux: PropTypes.arrayOf(PropTypes.object).isRequired,\n  editTotal: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  editExpenseHability: PropTypes.bool,\n  gastoRedux: PropTypes.objectOf(Array).isRequired,\n  editHability: PropTypes.bool.isRequired,\n  numberForLess: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  totalOfRedux: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  habilityEditFromRedux: PropTypes.func.isRequired,\n});\n\nWalletForm.defaultProps = ({\n  currencyList: {}, editTotal: undefined, editExpenseHability: false,\n});\n\nconst mapStateToProps = (state) => ({\n  currencyList: state.wallet.currencies,\n  exchangeRatesAction: state.wallet.currenciesDetails,\n  expensesStateRedux: state.wallet.expenses,\n  editExpenseHability: state.wallet.editArrayExpenses,\n  editTotal: state.wallet.editTotal,\n  editHability: state.wallet.editHability,\n  gastoRedux: state.wallet.gasto,\n  numberForLess: state.wallet.numberLess,\n  totalOfRedux: state.wallet.total,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  totalExpense: (total) => dispatch(getTotalExpense(total)),\n  expensesAction: (state) => dispatch(expensesActionProp(state)),\n  getCurrencyAPIThunkReq: () => dispatch(getCurrencyAPIThunk()),\n  habilityEditFromRedux: (editHability, name, value) => (\n    dispatch(habilityEditToRedux(editHability, name, value))\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { expensesAc as expensesActionProp, handleBtnDelete,\n  habilityEditToRedux,\n  clickGetExpense,\n  totalLess } from '../redux/actions';\n\nclass Table extends Component {\n  state = {\n    habilityReloadExpense: false,\n    habilityEdit: false,\n  }\n\n  componentDidUpdate() {\n    const { editExpenseHability, habilityEditFromRedux } = this.props;\n    const { habilityReloadExpense, habilityEdit } = this.state;\n    editExpenseHability(habilityReloadExpense);\n    habilityEditFromRedux(habilityEdit);\n  }\n\n  handleListExpense = (expense) => {\n    const { gastos, expenses, editExpenseHability } = this.props;\n\n    const numberOfDeleteTotalArray = gastos.map((gasto) => (Object\n      .values(gasto.exchangeRates)\n      .filter((exchange) => expense.currency === exchange.code\n        && exchange.codein !== 'BRLT')\n      .map((e) => Number(e.ask)) * Number(expense.value)).toFixed(2))[0];\n    console.log(numberOfDeleteTotalArray);\n    editExpenseHability(null, numberOfDeleteTotalArray);\n    expenses(gastos.filter((gasto) => gasto !== expense));\n    this.setState({ habilityReloadExpense: true });\n    this.setState({ habilityReloadExpense: false });\n  }\n\n  editListExpense = (gasto) => {\n    const { gastos } = this.props;\n    const { getExpenseClick, numberForLess } = this.props;\n    this.setState((prevState) => ({ habilityEdit: !prevState.habilityEdit }));\n    const numberOfDeleteTotalArray = gastos.map((g) => (Object\n      .values(g.exchangeRates)\n      .filter((exchange) => gasto.currency === exchange.code\n        && exchange.codein !== 'BRLT')\n      .map((e) => Number(e.ask)) * Number(gasto.value)).toFixed(2))[0];\n    numberForLess(numberOfDeleteTotalArray);\n    getExpenseClick(gasto);\n  }\n\n  render() {\n    const { gastos } = this.props;\n    return (\n      <table>\n        <thead>\n\n          <tr>\n            <th scope=\"col\">Descrição</th>\n            <th scope=\"col\">Tag</th>\n            <th scope=\"col\">Método de pagamento</th>\n            <th scope=\"col\">Valor</th>\n            <th scope=\"col\">Moeda</th>\n            <th scope=\"col\">Câmbio utilizado</th>\n            <th scope=\"col\">Valor convertido</th>\n            <th scope=\"col\">Moeda de conversão</th>\n            <th scope=\"col\">Editar/Excluir</th>\n          </tr>\n        </thead>\n\n        {gastos.sort((a, b) => a.id - b.id).map((gasto) => (\n          <tbody key={ gasto.id }>\n\n            <tr>\n              <td>{gasto.description}</td>\n              <td>{gasto.tag}</td>\n              <td>{gasto.method}</td>\n              <td>{Number(gasto.value).toFixed(2)}</td>\n              <td>\n                {Object.values(gasto.exchangeRates)\n                  .filter((exchange) => gasto.currency === exchange.code\n      && exchange.codein !== 'BRLT').map((e) => e.name)}\n              </td>\n              <td>\n                {Object.values(gasto.exchangeRates)\n                  .filter((exchange) => gasto.currency === exchange.code\n      && exchange.codein !== 'BRLT').map((e) => parseFloat(e.ask).toFixed(2))}\n              </td>\n              <td>\n                {(Object.values(gasto.exchangeRates)\n                  .filter((exchange) => gasto.currency === exchange.code\n      && exchange.codein !== 'BRLT')\n                  .map((e) => Number(e.ask)) * Number(gasto.value)).toFixed(2)}\n\n              </td>\n              <td>Real</td>\n              <td id=\"buttons-td\">\n                <button\n                  type=\"button\"\n                  data-testid=\"edit-btn\"\n                  onClick={ () => this.editListExpense(gasto) }\n                >\n                  Editar despesa\n                </button>\n                <button\n                  type=\"button\"\n                  data-testid=\"delete-btn\"\n                  onClick={ () => this.handleListExpense(gasto) }\n                >\n                  Excluir\n                </button>\n\n              </td>\n            </tr>\n\n          </tbody>\n        ))}\n\n      </table>\n    );\n  }\n}\n\nTable.propTypes = ({\n  gastos: PropTypes.arrayOf(Object).isRequired,\n  editExpenseHability: PropTypes.func.isRequired,\n  expenses: PropTypes.func.isRequired,\n  habilityEditFromRedux: PropTypes.func.isRequired,\n  numberForLess: PropTypes.func.isRequired,\n  getExpenseClick: PropTypes.func.isRequired,\n});\n\nconst mapStateToProps = (state) => ({\n  gastos: state.wallet.expenses,\n  nameRedux: state.wallet.name,\n  valueRedux: state.wallet.value,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  expenses: (param) => dispatch(expensesActionProp(param)),\n  editExpenseHability: (param1, param2) => dispatch(handleBtnDelete(param1, param2)),\n  habilityEditFromRedux: (editHability) => (\n    dispatch(habilityEditToRedux(editHability))\n  ),\n  getExpenseClick: (gasto) => dispatch(clickGetExpense(gasto)),\n  numberForLess: (number) => dispatch(totalLess(number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import Header from '../components/Header';\nimport WalletForm from '../components/WalletForm';\nimport { getCurrencyAPIThunk } from '../redux/actions';\nimport Table from '../components/Table';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { currency } = this.props;\n    currency();\n  }\n\n  render() {\n    const { email, totalExpense } = this.props;\n    return (\n      <>\n        {/* <Header\n          email={ email }\n          totalField={ totalExpense }\n        /> */}\n        <div className=\"informations-container\">\n          <p data-testid=\"email-field\">{email}</p>\n\n          <p data-testid=\"total-field\">\n            {totalExpense === 0 ? Number(totalExpense)\n              .toFixed(2) : totalExpense}\n          </p>\n\n          <p data-testid=\"header-currency-field\">BRL</p>\n\n        </div>\n\n        <WalletForm />\n\n        <Table />\n      </>\n    );\n  }\n}\n\nWallet.propTypes = ({\n  email: PropTypes.string.isRequired,\n  currency: PropTypes.func.isRequired,\n  totalExpense: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n});\n\nWallet.defaultProps = {\n  totalExpense: '',\n};\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  totalExpense: state.wallet.total,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  currency: () => dispatch(getCurrencyAPIThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" render={ (props) => <Login { ...props } /> } />\n      <Route path=\"/carteira\" render={ (props) => <Wallet { ...props } /> } />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={ process.env.PUBLIC_URL }>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}